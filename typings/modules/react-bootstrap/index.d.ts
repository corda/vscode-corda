// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Button.d.ts
declare module '~react-bootstrap/src/Button' {
import React = require('react');

// <Button />
// ----------------------------------------
export interface ButtonProps extends React.Props<ButtonClass>{

    // Optional
    active?: boolean;
    disabled?: boolean;
    block?: boolean;
    bsClass?: string;
    bsStyle?: string;
    bsSize?: string;
    className?: string;
    navItem?: boolean;
    navDropdown?: boolean;
    componentClass?: string;
    href?: string;
    onClick?: Function; // Add more specific type
    target?: string;
    type?: string;
}
export interface Button extends  React.ReactElement<ButtonProps> { }
export interface ButtonClass extends  React.ComponentClass<ButtonProps> { }

export var Button: ButtonClass;
}
declare module 'react-bootstrap/src/Button' {
export * from '~react-bootstrap/src/Button';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/ButtonToolbar.d.ts
declare module '~react-bootstrap/src/ButtonToolbar' {
import React = require('react');

// <ButtonToolbar />
// ----------------------------------------
export interface ButtonToolbarProps extends React.Props<ButtonToolbarClass> {

  // Optional
  block?: boolean;
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  justified?: boolean;
  vertical?: boolean;
}
export interface ButtonToolbar extends React.ReactElement<ButtonToolbarProps> { }
export interface ButtonToolbarClass extends  React.ComponentClass<ButtonToolbarProps> { }
export var ButtonToolbar: ButtonToolbarClass;
}
declare module 'react-bootstrap/src/ButtonToolbar' {
export * from '~react-bootstrap/src/ButtonToolbar';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/ButtonGroup.d.ts
declare module '~react-bootstrap/src/ButtonGroup' {
// Import React
import React = require('react');

// <ButtonGroup />
// ----------------------------------------
export interface ButtonGroupProps extends React.Props<ButtonGroupClass> {
  // Optional
  block?: boolean;
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  justified?: boolean;
  vertical?: boolean;
}
export interface ButtonGroup extends React.ReactElement<ButtonGroupProps> { }
export interface ButtonGroupClass extends  React.ComponentClass<ButtonGroupProps> { }
export var ButtonGroup: ButtonGroupClass;
}
declare module 'react-bootstrap/src/ButtonGroup' {
export * from '~react-bootstrap/src/ButtonGroup';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/DropdownButton.d.ts
declare module '~react-bootstrap/src/DropdownButton' {
// Import React
import React = require('react');

// <DropdownButton />
// ----------------------------------------
export interface DropdownButtonProps extends React.Props<DropdownButtonClass> {
  bsStyle?: string;
  bsSize?: string;
  buttonClassName?: string;
  componentClass?: any;
  className?: string;
  dropup?: boolean;
  href?: string;
  id?: string | number;
  navItem?: boolean;
  noCaret?: boolean;
  onClick?: Function;  // TODO: Add more specifc type
  onSelect?: Function; // TODO: Add more specific type
  pullRight?: boolean;
  title?: any; // TODO: Add more specific type
}
export interface DropdownButton extends React.ReactElement<DropdownButtonProps> { }
export interface DropdownButtonClass extends React.ComponentClass<DropdownButtonProps> { }
export var DropdownButton: DropdownButtonClass;
}
declare module 'react-bootstrap/src/DropdownButton' {
export * from '~react-bootstrap/src/DropdownButton';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/SplitButton.d.ts
declare module '~react-bootstrap/src/SplitButton' {
// Import React
import React = require('react');

// <SplitButton />
// ----------------------------------------
export interface SplitButtonProps extends React.Props<SplitButtonClass>{
  bsStyle?: string;
  bsSize?: string;
  className?: string;
  disabled?: boolean;
  dropdownTitle?: any; // TODO: Add more specific type
  dropup?: boolean;
  href?: string;
  id?: string;
  onClick?: Function;  // TODO: Add more specific type
  onSelect?: Function; // TODO: Add more specific type
  pullRight?: boolean;
  target?: string;
  title?: any; // TODO: Add more specific type
}
export interface SplitButton extends React.ReactElement<SplitButtonProps> { }
export interface SplitButtonClass extends React.ComponentClass<SplitButtonProps> { }
export var SplitButton: SplitButtonClass;
}
declare module 'react-bootstrap/src/SplitButton' {
export * from '~react-bootstrap/src/SplitButton';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/MenuItem.d.ts
declare module '~react-bootstrap/src/MenuItem' {
// Import React
import React = require('react');

// <MenuItem />
// ----------------------------------------
export interface MenuItemProps extends React.Props<MenuItemClass> {
  active?: boolean;
  className?: string;
  disabled?: boolean;
  divider?: boolean;
  eventKey?: any;
  header?: boolean;
  href?: string;
  onClick?: Function;
  onKeyDown?: Function;
  onSelect?: Function;
  target?: string;
  title?: string;
}
export interface MenuItem extends React.ReactElement<MenuItemProps> { }
export interface MenuItemClass extends React.ComponentClass<MenuItemProps> { }
export var MenuItem: MenuItemClass;
}
declare module 'react-bootstrap/src/MenuItem' {
export * from '~react-bootstrap/src/MenuItem';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Panel.d.ts
declare module '~react-bootstrap/src/Panel' {
// Import React
import React = require('react');

// <Panel />
// ----------------------------------------
export interface PanelProps extends React.Props<PanelClass> {
  className?: string;
  bsSize?: string;
  bsStyle?: string;
  collapsible?: boolean;
  defaultExpanded?: boolean;
  eventKey?: any;
  expanded?: boolean;
  footer?: any; // TODO: Add more specific type
  header?: any; // TODO: Add more specific type
  id?: string;
  onSelect?: Function; // TODO: Add more specific type
  onClick?: Function; // TODO: Add more specific type
}
export interface Panel extends React.ReactElement<PanelProps> { }
export interface PanelClass extends React.ComponentClass<PanelProps> { }
export var Panel: PanelClass;
}
declare module 'react-bootstrap/src/Panel' {
export * from '~react-bootstrap/src/Panel';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Accordion.d.ts
declare module '~react-bootstrap/src/Accordion' {
// Import React
import React = require('react');

// <Accordion />
// ----------------------------------------
export interface AccordionProps extends React.Props<AccordionClass> {
  bsSize?: string;
  bsStyle?: string;
  collapsible?: boolean;
  defaultExpanded?: boolean;
  eventKey?: any;
  expanded?: boolean;
  footer?: any; // TODO: Add more specific type
  header?: any; // TODO: Add more specific type
  id?: string;
  onSelect?: Function; // TODO: Add more specific type
}
export interface Accordion extends React.ReactElement<AccordionProps> { }
export interface AccordionClass extends  React.ComponentClass<AccordionProps> { }
export var Accordion: AccordionClass;
}
declare module 'react-bootstrap/src/Accordion' {
export * from '~react-bootstrap/src/Accordion';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/PanelGroup.d.ts
declare module '~react-bootstrap/src/PanelGroup' {
// Import React
import React = require('react');

// <PanelGroup />
// ----------------------------------------
export interface PanelGroupProps extends React.Props<PanelGroupClass> {
  accordion?: boolean;
  activeKey?: any;
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  defaultActiveKey?: any;
  onSelect?: Function;
}
export interface PanelGroup extends React.ReactElement<PanelGroupProps> { }
export interface PanelGroupClass extends  React.ComponentClass<PanelGroupProps> { }
export var PanelGroup: PanelGroupClass;
}
declare module 'react-bootstrap/src/PanelGroup' {
export * from '~react-bootstrap/src/PanelGroup';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/ModalHeader.d.ts
declare module '~react-bootstrap/src/ModalHeader' {
// Import React
import React = require('react');

// <Modal.Header />
// ----------------------------------------
export interface ModalHeaderProps extends React.Props<ModalHeaderClass> {
  className?: string;
  closeButton?: boolean;
  modalClassName?: string;
  onHide?: Function;
  // undefined?: string;
}
export interface ModalHeader extends React.ReactElement<ModalHeaderProps> { }
export interface ModalHeaderClass extends React.ComponentClass<ModalHeaderProps> { }
}
declare module 'react-bootstrap/src/ModalHeader' {
export * from '~react-bootstrap/src/ModalHeader';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/ModalTitle.d.ts
declare module '~react-bootstrap/src/ModalTitle' {
// Import React
import React = require('react');

// <Modal.Title/>
// ----------------------------------------
export interface ModalTitleProps extends React.Props<ModalTitleClass> {
  id?: string;
  className?: string;
  modalClassName?: string;
}
export interface ModalTitle extends React.ReactElement<ModalTitleProps> { }
export interface ModalTitleClass extends React.ComponentClass<ModalTitleProps> { }
}
declare module 'react-bootstrap/src/ModalTitle' {
export * from '~react-bootstrap/src/ModalTitle';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/ModalBody.d.ts
declare module '~react-bootstrap/src/ModalBody' {
// Import React
import React = require('react');

// <Modal.Body />
// ----------------------------------------
export interface ModalBodyProps extends React.Props<ModalBodyClass> {
  className?: string;
  modalClassName?: string;
}
export interface ModalBody extends React.ReactElement<ModalBodyProps> { }
export interface ModalBodyClass extends React.ComponentClass<ModalBodyProps> { }
}
declare module 'react-bootstrap/src/ModalBody' {
export * from '~react-bootstrap/src/ModalBody';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/ModalFooter.d.ts
declare module '~react-bootstrap/src/ModalFooter' {
// Import React
import React = require('react');

// <Modal.Footer />
// ----------------------------------------
export interface ModalFooterProps extends React.Props<ModalFooterClass> {
  className?: string;
  modalClassName?: string;
}
export interface ModalFooter extends React.ReactElement<ModalFooterProps> { }
export interface ModalFooterClass extends React.ComponentClass<ModalFooterProps> { }
}
declare module 'react-bootstrap/src/ModalFooter' {
export * from '~react-bootstrap/src/ModalFooter';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/ModalDialog.d.ts
declare module '~react-bootstrap/src/ModalDialog' {
// Import React
import React = require('react');

// <Modal.Dialog />
// ----------------------------------------
export interface ModalDialogProps extends React.Props<ModalDialogClass> {
  // TODO: Add more specific type
}
export interface ModalDialog extends React.ReactElement<ModalDialogProps> { }
export interface ModalDialogClass extends React.ComponentClass<ModalDialogProps> { }
}
declare module 'react-bootstrap/src/ModalDialog' {
export * from '~react-bootstrap/src/ModalDialog';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Modal.d.ts
declare module '~react-bootstrap/src/Modal' {
// Import React
import React = require('react');

import {ModalHeaderClass} from '~react-bootstrap/src/ModalHeader';
import {ModalTitleClass} from '~react-bootstrap/src/ModalTitle';
import {ModalBodyClass} from '~react-bootstrap/src/ModalBody';
import {ModalFooterClass} from '~react-bootstrap/src/ModalFooter';
import {ModalDialogClass} from '~react-bootstrap/src/ModalDialog';

// <Modal />
// ----------------------------------------
export interface ModalProps extends React.Props<ModalClass> {
  // Required
  onHide: Function;

  // Optional
  animation?: boolean;
  autoFocus?: boolean;
  backdrop?: boolean|string;
  bsSize?: string;
  container?: any; // TODO: Add more specific type
  dialogClassName?: string;
  dialogComponent?: any; // TODO: Add more specific type
  enforceFocus?: boolean;
  keyboard?: boolean;
  show?: boolean;

  onEnter?: Function;
  onEntering?: Function;
  onEntered?: Function;
  onExit?: Function;
  onExiting?: Function;
  onExited?: Function;
}
export interface Modal extends React.ReactElement<ModalProps> { }
export interface ModalClass extends React.ComponentClass<ModalProps> {
  Header: ModalHeaderClass;
  Title: ModalTitleClass;
  Body: ModalBodyClass;
  Footer: ModalFooterClass;
  Dialog: ModalDialogClass;
}
export var Modal: ModalClass;
}
declare module 'react-bootstrap/src/Modal' {
export * from '~react-bootstrap/src/Modal';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/OverlayTrigger.d.ts
declare module '~react-bootstrap/src/OverlayTrigger' {
// Import React
import React = require('react');

// <OverlayTrigger />
// ----------------------------------------
export interface OverlayTriggerProps extends React.Props<OverlayTriggerClass> {
  // Required
  overlay: any; // TODO: Add more specific type

  // Optional
  animation?: any; // TODO: Add more specific type
  container?: any; // TODO: Add more specific type
  containerPadding?: number;
  defaultOverlayShown?: boolean;
  delay?: number;
  delayHide?: number;
  delayShow?: number;
  onEnter?: Function;
  onEntered?: Function;
  onEntering?: Function;
  onExit?: Function;
  onExited?: Function;
  onExiting?: Function;
  placement?: string;
  rootClose?: boolean;
  trigger?: string | string[];
}
export interface OverlayTrigger extends React.ReactElement<OverlayTriggerProps> { }
export interface OverlayTriggerClass extends  React.ComponentClass<OverlayTriggerProps> { }
export var OverlayTrigger: OverlayTriggerClass;
}
declare module 'react-bootstrap/src/OverlayTrigger' {
export * from '~react-bootstrap/src/OverlayTrigger';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Tooltip.d.ts
declare module '~react-bootstrap/src/Tooltip' {
// Import React
import React = require('react');

// <Tooltip />
// ----------------------------------------
export interface TooltipProps extends React.Props<TooltipClass> {
  // Optional
  arrowOffsetLeft?: number | string;
  arrowOffsetTop?: number | string;
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  id?: string;
  placement?: string;
  positionLeft?: number;
  positionTop?: number;
  title?: any; // TODO: Add more specific type
}
export interface Tooltip extends React.ReactElement<TooltipProps> { }
export interface TooltipClass extends React.ComponentClass<TooltipProps> { }
export var Tooltip: TooltipClass;
}
declare module 'react-bootstrap/src/Tooltip' {
export * from '~react-bootstrap/src/Tooltip';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Popover.d.ts
declare module '~react-bootstrap/src/Popover' {
// Import React
import React = require('react');

// <Popover/>
// ----------------------------------------
export interface PopoverProps  extends React.Props<PopoverClass> {
  // Optional
  arrowOffsetLeft?: number | string;
  arrowOffsetTop?: number | string;
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  id?: string;
  placement?: string;
  positionLeft?: number;
  positionTop?: number;
  title?: any; // TODO: Add more specific type
}
export interface Popover extends React.ReactElement<PopoverProps> { }
export interface PopoverClass extends React.ComponentClass<PopoverProps> { }
export var Popover: PopoverClass;
}
declare module 'react-bootstrap/src/Popover' {
export * from '~react-bootstrap/src/Popover';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Overlay.d.ts
declare module '~react-bootstrap/src/Overlay' {
// Import React
import React = require('react');

// <Overlay />
// ----------------------------------------
export interface OverlayProps extends React.Props<OverlayClass> {
  // Optional
  animation?: any; // TODO: Add more specific type
  container?: any; // TODO: Add more specific type
  containerPadding?: number; // TODO: Add more specific type
  onEnter?: Function;
  onEntered?: Function;
  onEntering?: Function;
  onExit?: Function;
  onExited?: Function;
  onExiting?: Function;
  onHide?: Function;
  placement?: string;
  rootClose?: boolean;
  show?: boolean;
  target?: Function;
}
export interface Overlay extends React.ReactElement<OverlayProps> { }
export interface OverlayClass extends  React.ComponentClass<OverlayProps> { }
export var Overlay: OverlayClass;
}
declare module 'react-bootstrap/src/Overlay' {
export * from '~react-bootstrap/src/Overlay';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/ProgressBar.d.ts
declare module '~react-bootstrap/src/ProgressBar' {
// Import React
import React = require('react');

// <ProgressBar />
// ----------------------------------------
export interface ProgressBarProps extends React.Props<ProgressBarClass> {
  // Optional
  active?: boolean;
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  interpolatedClass?: any; // TODO: Add more specific type
  label?: any; // TODO: Add more specific type
  max?: number;
  min?: number;
  now?: number;
  srOnly?: boolean;
  striped?: boolean;
}
export interface ProgressBar extends React.ReactElement<ProgressBarProps> { }
export interface ProgressBarClass extends  React.ComponentClass<ProgressBarProps> { }
export var ProgressBar: ProgressBarClass;
}
declare module 'react-bootstrap/src/ProgressBar' {
export * from '~react-bootstrap/src/ProgressBar';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Nav.d.ts
declare module '~react-bootstrap/src/Nav' {
// Import React
import React = require('react');

// <Nav />
// ----------------------------------------
// TODO: This one turned into a union of two different types
export interface NavProps extends React.Props<NavClass> {
  // Optional
  activeHref?: string;
  activeKey?: any;
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  collapsible?: boolean;
  eventKey?: any;
  expanded?: boolean;
  id?: string;
  justified?: boolean;
  navbar?: boolean;
  onSelect?: Function;
  pullRight?: boolean;
  right?: boolean;
  stacked?: boolean;
  ulClassName?: string;
  ulId?: string;
}
export interface Nav extends React.ReactElement<NavProps> { }
export interface NavClass extends  React.ComponentClass<NavProps> { }
export var Nav: NavClass;
}
declare module 'react-bootstrap/src/Nav' {
export * from '~react-bootstrap/src/Nav';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/NavItem.d.ts
declare module '~react-bootstrap/src/NavItem' {
// Import React
import React = require('react');

// <NavItem />
// ----------------------------------------
export interface NavItemProps extends React.Props<NavItemClass> {
  active?: boolean;
  brand?: any; // TODO: Add more specific type
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  componentClass?: any; // TODO: Add more specific type
  defaultNavExpanded?: boolean;
  disabled?: boolean;
  eventKey?: any;
  fixedBottom?: boolean;
  fixedTop?: boolean;
  fluid?: boolean;
  href?: string;
  inverse?: boolean;
  linkId?: string;
  navExpanded?: boolean;
  onClick?: Function;
  onSelect?: Function;
  onToggle?: Function;
  role?: string;
  staticTop?: boolean;
  target?: string;
  title?: string;
  toggleButton?: any; // TODO: Add more specific type
  toggleNavKey?: string | number;
}
export interface NavItem extends React.ReactElement<NavItemProps> { }
export interface NavItemClass extends React.ComponentClass<NavItemProps> { }
export var NavItem: NavItemClass;
}
declare module 'react-bootstrap/src/NavItem' {
export * from '~react-bootstrap/src/NavItem';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/NavbarBrand.d.ts
declare module '~react-bootstrap/src/NavbarBrand' {
// Import React
import React = require('react');

// <Navbar.Brand />
// ----------------------------------------
export interface NavbarBrandProps extends React.Props<NavbarBrandClass> {
}
export interface NavbarBrand extends React.ReactElement<NavbarBrandProps> { }
export interface NavbarBrandClass extends  React.ComponentClass<NavbarBrandProps> { }
}
declare module 'react-bootstrap/src/NavbarBrand' {
export * from '~react-bootstrap/src/NavbarBrand';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/NavbarCollapse.d.ts
declare module '~react-bootstrap/src/NavbarCollapse' {
// Import React
import React = require('react');

// <Navbar.Collapse />
// ----------------------------------------
export interface NavbarCollapseProps extends React.Props<NavbarCollapseClass> {
}
export interface NavbarCollapse extends React.ReactElement<NavbarCollapseProps> { }
export interface NavbarCollapseClass extends  React.ComponentClass<NavbarCollapseProps> { }
}
declare module 'react-bootstrap/src/NavbarCollapse' {
export * from '~react-bootstrap/src/NavbarCollapse';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/NavbarHeader.d.ts
declare module '~react-bootstrap/src/NavbarHeader' {
// Import React
import React = require('react');

// <Navbar.Header />
// ----------------------------------------
export interface NavbarHeaderProps extends React.Props<NavbarHeaderClass> {
}
export interface NavbarHeader extends React.ReactElement<NavbarHeaderProps> { }
export interface NavbarHeaderClass extends  React.ComponentClass<NavbarHeaderProps> { }
}
declare module 'react-bootstrap/src/NavbarHeader' {
export * from '~react-bootstrap/src/NavbarHeader';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/NavbarToggle.d.ts
declare module '~react-bootstrap/src/NavbarToggle' {
// Import React
import React = require('react');

// <Navbar.Toggle />
// ----------------------------------------
export interface NavbarToggleProps extends React.Props<NavbarToggleClass> {
}
export interface NavbarToggle extends React.ReactElement<NavbarToggleProps> { }
export interface NavbarToggleClass extends  React.ComponentClass<NavbarToggleProps> { }
}
declare module 'react-bootstrap/src/NavbarToggle' {
export * from '~react-bootstrap/src/NavbarToggle';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Navbar.d.ts
declare module '~react-bootstrap/src/Navbar' {
// Import React
import React = require('react');

import {NavbarBrandClass} from '~react-bootstrap/src/NavbarBrand';
import {NavbarCollapseClass} from '~react-bootstrap/src/NavbarCollapse';
import {NavbarHeaderClass} from '~react-bootstrap/src/NavbarHeader';
import {NavbarToggleClass} from '~react-bootstrap/src/NavbarToggle';

// <Navbar />
// ----------------------------------------
export interface NavbarProps extends React.Props<NavbarClass> {
  brand?: any; // TODO: Add more specific type
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  componentClass?: any; // TODO: Add more specific type
  defaultNavExpanded?: boolean;
  fixedBottom?: boolean;
  fixedTop?: boolean;
  fluid?: boolean;
  inverse?: boolean;
  navExpanded?: boolean;
  onToggle?: Function;
  role?: string;
  staticTop?: boolean;
  toggleButton?: any; // TODO: Add more specific type
  toggleNavKey?: string | number;
}
export interface Navbar extends React.ReactElement<NavbarProps> { }
export interface NavbarClass extends React.ComponentClass<NavbarProps> {
  Brand: NavbarBrandClass;
  Collapse: NavbarCollapseClass;
  Header: NavbarHeaderClass;
  Toggle: NavbarToggleClass;
}
export var Navbar: NavbarClass;
}
declare module 'react-bootstrap/src/Navbar' {
export * from '~react-bootstrap/src/Navbar';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/NavBrand.d.ts
declare module '~react-bootstrap/src/NavBrand' {
// Import React
import React = require('react');

// <NavBrand />
// ----------------------------------------
export interface NavBrandProps {

}
export interface NavBrand extends React.ReactElement<NavBrandProps> { }
export interface NavBrandClass extends  React.ComponentClass<NavBrandProps> { }
export var NavBrand: NavBrandClass;
}
declare module 'react-bootstrap/src/NavBrand' {
export * from '~react-bootstrap/src/NavBrand';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/NavDropdown.d.ts
declare module '~react-bootstrap/src/NavDropdown' {
// Import React
import React = require('react');

// <NavDropdown />
// ----------------------------------------
export interface NavDropdownProps extends React.Props<NavDropdownClass> {
  className?: string;
  eventKey?: any;
  title?: string;
  id?: string;
}
export interface NavDropdown extends React.ReactElement<NavDropdownProps> { }
export interface NavDropdownClass extends  React.ComponentClass<NavDropdownProps> { }
export var NavDropdown: NavDropdownClass;
}
declare module 'react-bootstrap/src/NavDropdown' {
export * from '~react-bootstrap/src/NavDropdown';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Tabs.d.ts
declare module '~react-bootstrap/src/Tabs' {
// Import React
import React = require('react');

// <Tabs />
// ----------------------------------------
export interface TabsProps extends React.Props<TabsClass> {
  activeKey?: any;
  animation?: boolean;
  bsStyle?: string;
  defaultActiveKey?: any;
  id?: string | number;
  onSelect?: Function;
  paneWidth?: any; // TODO: Add more specific type
  position?: string;
  tabWidth?: any; // TODO: Add more specific type
}
export interface Tabs extends React.ReactElement<TabsProps> { }
export interface TabsClass extends React.ComponentClass<TabsProps> { }
export var Tabs: TabsClass;
}
declare module 'react-bootstrap/src/Tabs' {
export * from '~react-bootstrap/src/Tabs';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Tab.d.ts
declare module '~react-bootstrap/src/Tab' {
// Import React
import React = require('react');

// <Tab />
// ----------------------------------------
export interface TabProps extends React.Props<TabClass> {
  animation?: boolean;
  className?: string;
  disabled?: boolean;
  eventKey?: any; // TODO: Add more specific type
  title?: any; // TODO: Add more specific type
}
export interface Tab extends React.ReactElement<TabProps> { }
export interface TabClass extends React.ComponentClass<TabProps> { }
export var Tab: TabClass;
}
declare module 'react-bootstrap/src/Tab' {
export * from '~react-bootstrap/src/Tab';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Pager.d.ts
declare module '~react-bootstrap/src/Pager' {
// Import React
import React = require('react');

// <Pager />
// ----------------------------------------
export interface PagerProps extends React.Props<PagerClass> {
  className?: string;
  onSelect?: Function;
}
export interface Pager extends React.ReactElement<PagerProps> { }
export interface PagerClass extends  React.ComponentClass<PagerProps> { }
export var Pager: PagerClass;
}
declare module 'react-bootstrap/src/Pager' {
export * from '~react-bootstrap/src/Pager';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/PageItem.d.ts
declare module '~react-bootstrap/src/PageItem' {
// Import React
import React = require('react');

// <PageItem />
// ----------------------------------------
export interface PageItemProps extends React.Props<PageItemClass> {
  className?: string;
  disabled?: boolean;
  eventKey?: any;
  href?: string;
  next?: boolean;
  onSelect?: Function;
  previous?: boolean;
  target?: string;
  title?: string;
}
export interface PageItem extends React.ReactElement<PageItemProps> { }
export interface PageItemClass extends React.ComponentClass<PageItemProps> { }
export var PageItem: PageItemClass;
}
declare module 'react-bootstrap/src/PageItem' {
export * from '~react-bootstrap/src/PageItem';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Pagination.d.ts
declare module '~react-bootstrap/src/Pagination' {
// Import React
import React = require('react');

// <Pagination />
// ----------------------------------------
export interface PaginationProps extends React.Props<PaginationClass> {
  activePage?: number;
  bsSize?: string;
  bsStyle?: string;
  buttonComponentClass?: any; // TODO: Add more specific type
  className?: string;
  ellipsis?: boolean;
  first?: boolean;
  items?: number;
  last?: boolean;
  maxButtons?: number;
  next?: boolean;
  onSelect?: Function;
  prev?: boolean;
}
export interface Pagination extends React.ReactElement<PaginationProps> { }
export interface PaginationClass extends React.ComponentClass<PaginationProps> { }
export var Pagination: PaginationClass;
}
declare module 'react-bootstrap/src/Pagination' {
export * from '~react-bootstrap/src/Pagination';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Alert.d.ts
declare module '~react-bootstrap/src/Alert' {
// Import React
import React = require('react');

// <Alert />
// ----------------------------------------
export interface AlertProps extends React.Props<AlertClass> {
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  closeLabel?: string;
  dismissAfter?: number;
  onDismiss?: Function;
}
export interface Alert extends React.ReactElement<AlertProps> { }
export interface AlertClass extends React.ComponentClass<AlertProps> { }
export var Alert: AlertClass;
}
declare module 'react-bootstrap/src/Alert' {
export * from '~react-bootstrap/src/Alert';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Carousel.d.ts
declare module '~react-bootstrap/src/Carousel' {
// Import React
import React = require('react');

// <Carousel />
// ----------------------------------------
export interface CarouselProps extends React.Props<CarouselClass> {
  activeIndex?: number;
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  controls?: boolean;
  defaultActiveIndex?: number;
  direction?: string;
  indicators?: boolean;
  interval?: number;
  nextIcon?: any; // TODO: Add more specific type
  onSelect?: Function;
  onSlideEnd?: Function;
  pauseOnHover?: boolean;
  prevIcon?: any; // TODO: Add more specific type
  slide?: boolean;
  wrap?: boolean;
}
export interface Carousel extends React.ReactElement<CarouselProps> { }
export interface CarouselClass extends React.ComponentClass<CarouselProps> { }
export var Carousel: CarouselClass;
}
declare module 'react-bootstrap/src/Carousel' {
export * from '~react-bootstrap/src/Carousel';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/CarouselItem.d.ts
declare module '~react-bootstrap/src/CarouselItem' {
// Import React
import React = require('react');

// <CarouselItem />
// ----------------------------------------
export interface CarouselItemProps extends React.Props<CarouselItemClass> {
  active?: boolean;
  animtateIn?: boolean;
  animateOut?: boolean;
  caption?: any; // TODO: Add more specific type
  className?: string;
  direction?: string;
  index?: number;
  onAnimateOutEnd?: Function;
}
export interface CarouselItem extends React.ReactElement<CarouselItemProps> { }
export interface CarouselItemClass extends React.ComponentClass<CarouselItemProps> { }
export var CarouselItem: CarouselItemClass;
}
declare module 'react-bootstrap/src/CarouselItem' {
export * from '~react-bootstrap/src/CarouselItem';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Grid.d.ts
declare module '~react-bootstrap/src/Grid' {
import React = require('react');

// <Grid />
// ----------------------------------------
export interface GridProps extends React.Props<GridClass> {
    className?: string;
    componentClass?: any; // TODO: Add more specific type
    fluid?: boolean;
}
export interface Grid extends React.ReactElement<GridProps> { }
export interface GridClass extends React.ComponentClass<GridProps> { }

export var Grid: GridClass;
}
declare module 'react-bootstrap/src/Grid' {
export * from '~react-bootstrap/src/Grid';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Row.d.ts
declare module '~react-bootstrap/src/Row' {
import React = require('react');

// <Row />
// ----------------------------------------
export interface RowProps extends React.Props<RowClass> {
    className?: string;
    componentClass?: any; // TODO: Add more specific type
}
export interface Row extends React.ReactElement<RowProps> { }
export interface RowClass extends React.ComponentClass<RowProps> { }
export var Row: RowClass;
}
declare module 'react-bootstrap/src/Row' {
export * from '~react-bootstrap/src/Row';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Col.d.ts
declare module '~react-bootstrap/src/Col' {
// Import React
import React = require('react');

// <Col />
// ----------------------------------------
export interface ColProps extends React.Props<ColClass> {
  className?: string;
  componentClass?: any; // TODO: Add more specific type
  lg?: number;
  lgOffset?: number;
  lgPull?: number;
  lgPush?: number;
  md?: number;
  mdOffset?: number;
  mdPull?: number;
  mdPush?: number;
  sm?: number;
  smOffset?: number;
  smPull?: number;
  smPush?: number;
  xs?: number;
  xsOffset?: number;
  xsPull?: number;
  xsPush?: number;
}
export interface Col extends React.ReactElement<ColProps> { }
export interface ColClass extends React.ComponentClass<ColProps> { }
export var Col: ColClass;
}
declare module 'react-bootstrap/src/Col' {
export * from '~react-bootstrap/src/Col';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Thumbnail.d.ts
declare module '~react-bootstrap/src/Thumbnail' {
// Import React
import React = require('react');

// <Thumbnail />
// ----------------------------------------
export interface ThumbnailProps extends React.Props<ThumbnailClass> {
  alt?: string;
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  href?: string;
  src?: string;
}
export interface Thumbnail extends React.ReactElement<ThumbnailProps> { }
export interface ThumbnailClass extends React.ComponentClass<ThumbnailProps> { }
export var Thumbnail: ThumbnailClass;
}
declare module 'react-bootstrap/src/Thumbnail' {
export * from '~react-bootstrap/src/Thumbnail';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/ListGroup.d.ts
declare module '~react-bootstrap/src/ListGroup' {
// Import React
import React = require('react');

// <ListGroup />
// ----------------------------------------
export interface ListGroupProps extends React.Props<ListGroupClass> {
  className?: string;
  id?: string | number;
  fill?: boolean; // TODO: Add more specific type
}
export interface ListGroup extends React.ReactElement<ListGroupProps> { }
export interface ListGroupClass extends React.ComponentClass<ListGroupProps> { }
export var ListGroup: ListGroupClass;
}
declare module 'react-bootstrap/src/ListGroup' {
export * from '~react-bootstrap/src/ListGroup';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/ListGroupItem.d.ts
declare module '~react-bootstrap/src/ListGroupItem' {
// Import React
import React = require('react');

// <ListGroupItem />
// ----------------------------------------
export interface ListGroupItemProps extends React.Props<ListGroupItemClass> {
  active?: any;
  bsSize?: string;
  bsStyle?: string;
  className?: string;
  disabled?: any;
  eventKey?: any;
  header?: any; // TODO: Add more specific type
  href?: string;
  key?: any; // TODO: Add more specific type
  listItem?: boolean;
  onClick?: Function; // TODO: Add more specific type
  target?: string;
}
export interface ListGroupItem extends React.ReactElement<ListGroupItemProps> { }
export interface ListGroupItemClass extends React.ComponentClass<ListGroupItemProps> { }
export var ListGroupItem: ListGroupItemClass;
}
declare module 'react-bootstrap/src/ListGroupItem' {
export * from '~react-bootstrap/src/ListGroupItem';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Label.d.ts
declare module '~react-bootstrap/src/Label' {
// Import React
import React = require('react');

// <Label />
// ----------------------------------------
export interface LabelProps extends React.Props<LabelClass> {
  bsSize?: string;
  bsStyle?: string;
  className?: string;
}
export interface Label extends React.ReactElement<LabelProps> { }
export interface LabelClass extends React.ComponentClass<LabelProps> { }
export var Label: LabelClass;
}
declare module 'react-bootstrap/src/Label' {
export * from '~react-bootstrap/src/Label';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Badge.d.ts
declare module '~react-bootstrap/src/Badge' {
// Import React
import React = require('react');

// <Badge />
// ----------------------------------------
export interface BadgeProps extends React.Props<BadgeClass> {
  className?: string;
  pullRight?: boolean;
}
export interface Badge extends React.ReactElement<BadgeProps> { }
export interface BadgeClass extends React.ComponentClass<BadgeProps> { }
export var Badge: BadgeClass;
}
declare module 'react-bootstrap/src/Badge' {
export * from '~react-bootstrap/src/Badge';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Jumbotron.d.ts
declare module '~react-bootstrap/src/Jumbotron' {
// Import React
import React = require('react');

// <Jumbotron />
// ----------------------------------------
export interface JumbotronProps extends React.Props<JumbotronClass> {
  className?: string;
  componentClass?: any; // TODO: Add more specific type
}
export interface Jumbotron extends React.ReactElement<JumbotronProps> { }
export interface JumbotronClass extends React.ComponentClass<JumbotronProps> { }
export var Jumbotron: JumbotronClass;
}
declare module 'react-bootstrap/src/Jumbotron' {
export * from '~react-bootstrap/src/Jumbotron';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/PageHeader.d.ts
declare module '~react-bootstrap/src/PageHeader' {
// Import React
import React = require('react');

// <PageHeader />
// ----------------------------------------
export interface PageHeaderProps extends React.Props<PageHeaderClass> {
  className?: string;
}
export interface PageHeader extends React.ReactElement<PageHeaderProps> { }
export interface PageHeaderClass extends React.ComponentClass<PageHeaderProps> { }
export var PageHeader: PageHeaderClass;
}
declare module 'react-bootstrap/src/PageHeader' {
export * from '~react-bootstrap/src/PageHeader';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Well.d.ts
declare module '~react-bootstrap/src/Well' {
// Import React
import React = require('react');

// <Well />
// ----------------------------------------
export interface WellProps extends React.Props<WellClass> {
  bsSize?: string;
  bsStyle?: string;
  className?: string;
}
export interface Well extends React.ReactElement<WellProps> { }
export interface WellClass extends React.ComponentClass<WellProps> { }
export var Well: WellClass;
}
declare module 'react-bootstrap/src/Well' {
export * from '~react-bootstrap/src/Well';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Glyphicon.d.ts
declare module '~react-bootstrap/src/Glyphicon' {
// Import React
import React = require('react');

// <Glyphicon />
// ----------------------------------------
export interface GlyphiconProps extends React.Props<GlyphiconClass> {
  className?: string;
  // Required
  glyph: string;
}
export interface Glyphicon extends React.ReactElement<GlyphiconProps> { }
export interface GlyphiconClass extends React.ComponentClass<GlyphiconProps> { }
export var Glyphicon: GlyphiconClass;
}
declare module 'react-bootstrap/src/Glyphicon' {
export * from '~react-bootstrap/src/Glyphicon';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Table.d.ts
declare module '~react-bootstrap/src/Table' {
// Import React
import React = require('react');

// <Table />
// ----------------------------------------
export interface TableProps extends React.Props<TableClass> {
  bordered?: boolean;
  className?: string;
  condensed?: boolean;
  hover?: boolean;
  responsive?: boolean;
  striped?: boolean;
}
export interface Table extends React.ReactElement<TableProps> { }
export interface TableClass extends React.ComponentClass<TableProps> { }
export var Table: TableClass;
}
declare module 'react-bootstrap/src/Table' {
export * from '~react-bootstrap/src/Table';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Input.d.ts
declare module '~react-bootstrap/src/Input' {
// Import React
import React = require('react');

// <Input />
// ----------------------------------------
export interface InputProps extends React.Props<InputClass> {
  defaultValue?:string;
  addonAfter?: any; // TODO: Add more specific type
  addonBefore?: any; // TODO: Add more specific type
  bsSize?: string;
  bsStyle?: string;
  buttonAfter?: any; // TODO: Add more specific type
  buttonBefore?: any; // TODO: Add more specific type
  className?: string;
  checked?: boolean;
  disabled?: boolean;
  feedbackIcon?: any; // TODO: Add more specific type
  groupClassName?: string;
  hasFeedback?: boolean;
  help?: any; // TODO: Add more specific type
  id?: string | number;
  label?: any; // TODO: Add more specific type
  labelClassName?: string;
  multiple?: boolean;
  placeholder?: string;
  readOnly?: boolean;
  type?: string;
  onChange?: Function; // TODO: Add more specific type
  onKeyDown?: Function; // TODO: Add more specific type
  onKeyUp?: Function; // TODO: Add more specific type
  onKeyPress?: Function; // TODO: Add more specific type
  value?: any; // TODO: Add more specific type
  wrapperClassName?: string;
}
export interface Input extends React.ReactElement<InputProps> { }
export interface InputClass extends React.ComponentClass<InputProps> { }
export var Input: InputClass;
}
declare module 'react-bootstrap/src/Input' {
export * from '~react-bootstrap/src/Input';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/ButtonInput.d.ts
declare module '~react-bootstrap/src/ButtonInput' {
// Import React
import React = require('react');

// <ButtonInput />
// ----------------------------------------
export interface ButtonInputProps extends React.Props<ButtonInputClass> {
  addonAfter?: any; // TODO: Add more specific type
  addonBefore?: any; // TODO: Add more specific type
  bsSize?: string;
  bsStyle?: string;
  buttonAfter?: any; // TODO: Add more specific type
  buttonBefore?: any; // TODO: Add more specific type
  className?: string;
  disabled?: boolean;
  feedbackIcon?: any; // TODO: Add more specific type
  groupClassName?: string;
  hasFeedback?: boolean;
  help?: any; // TODO: Add more specific type
  id?: string | number;
  label?: any; // TODO: Add more specific type
  labelClassName?: string;
  multiple?: boolean;
  onClick?: Function; // TODO: Add more specific type
  type?: string;
  value?: any; // TODO: Add more specific type
  wrapperClassName?: string;
}
export interface ButtonInput extends React.ReactElement<ButtonInputProps> { }
export interface ButtonInputClass extends React.ComponentClass<ButtonInputProps> { }
export var ButtonInput: ButtonInputClass;
}
declare module 'react-bootstrap/src/ButtonInput' {
export * from '~react-bootstrap/src/ButtonInput';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Portal.d.ts
declare module '~react-bootstrap/src/Portal' {
// Import React
import React = require('react');

// <Portal />
// ----------------------------------------
export interface PortalProps extends React.Props<PortalClass> {
  dimension?: string | Function;
  getDimensionValue?: Function;
  in?: boolean;
  onEnter?: Function;
  onEntered?: Function;
  onEntering?: Function;
  onExit?: Function;
  onExited?: Function;
  onExiting?: Function;
  role?: string;
  timeout?: number;
  transitionAppear?: boolean;
  unmountOnExit?: boolean;
}
export interface Portal extends React.ReactElement<PortalProps> { }
export interface PortalClass extends React.ComponentClass<PortalProps> { }
export var Portal: PortalClass;
}
declare module 'react-bootstrap/src/Portal' {
export * from '~react-bootstrap/src/Portal';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Position.d.ts
declare module '~react-bootstrap/src/Position' {
// Import React
import React = require('react');

// <Position />
// ----------------------------------------
export interface PositionProps extends React.Props<PositionClass> {
  dimension?: string | Function;
  getDimensionValue?: Function;
  in?: boolean;
  onEnter?: Function;
  onEntered?: Function;
  onEntering?: Function;
  onExit?: Function;
  onExited?: Function;
  onExiting?: Function;
  role?: string;
  timeout?: number;
  transitionAppear?: boolean;
  unmountOnExit?: boolean;
}
export interface Position extends React.ReactElement<PositionProps> { }
export interface PositionClass extends  React.ComponentClass<PositionProps> { }
export var Position: PositionClass;
}
declare module 'react-bootstrap/src/Position' {
export * from '~react-bootstrap/src/Position';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Fade.d.ts
declare module '~react-bootstrap/src/Fade' {
// Import React
import React = require('react');

// <Fade />
// ----------------------------------------
export interface FadeProps extends React.Props<FadeClass> {
  in?: boolean;
  onEnter?: Function;
  onEntered?: Function;
  onEntering?: Function;
  onExit?: Function;
  onExited?: Function;
  onExiting?: Function;
  timeout?: number;
  transitionAppear?: boolean;
  unmountOnExit?: boolean;
}
export interface Fade extends React.ReactElement<FadeProps> { }
export interface FadeClass extends React.ComponentClass<FadeProps> { }
export var Fade: FadeClass;
}
declare module 'react-bootstrap/src/Fade' {
export * from '~react-bootstrap/src/Fade';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Breadcrumb.d.ts
declare module '~react-bootstrap/src/Breadcrumb' {
// Import React
import React = require('react');

// <Breadcrumb />
// ----------------------------------------
export interface BreadcrumbProps extends React.Props<BreadcrumbClass> {
  className?: string;
}
export interface Breadcrumb extends React.ReactElement<BreadcrumbProps> { }
export interface BreadcrumbClass extends React.ComponentClass<BreadcrumbProps> { }
export var Breadcrumb: BreadcrumbClass;
}
declare module 'react-bootstrap/src/Breadcrumb' {
export * from '~react-bootstrap/src/Breadcrumb';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/BreadcrumbItem.d.ts
declare module '~react-bootstrap/src/BreadcrumbItem' {
// Import React
import React = require('react');

// <BreadcrumbItem />
// ----------------------------------------
export interface BreadcrumbItemProps extends React.Props<BreadcrumbItemClass> {
  className?: string;
  href?: string;
  title?: string;
  active?: boolean;
  id?: string|number;
  linkId?: string|number;
  target?: string;
}
export interface BreadcrumbItem extends React.ReactElement<BreadcrumbItemProps> { }
export interface BreadcrumbItemClass extends React.ComponentClass<BreadcrumbItemProps> { }
export var BreadcrumbItem: BreadcrumbItemClass;
}
declare module 'react-bootstrap/src/BreadcrumbItem' {
export * from '~react-bootstrap/src/BreadcrumbItem';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Image.d.ts
declare module '~react-bootstrap/src/Image' {
// Import React
import React = require('react');

// <Image />
// ----------------------------------------
export interface ImageProps extends React.Props<ImageClass> {

  // Optional
  circle?: boolean;
  responsive?: boolean;
  rounded?: boolean;
  thumbnail?: boolean;
  src?: string;
}
export interface Image extends React.ReactElement<ImageProps> {}
export interface ImageClass extends React.ComponentClass<ImageProps> {}
export var Image:ImageClass;
}
declare module 'react-bootstrap/src/Image' {
export * from '~react-bootstrap/src/Image';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/Collapse.d.ts
declare module '~react-bootstrap/src/Collapse' {
// Import React
import React = require('react');

// <Collapse />
// ----------------------------------------
export interface CollapseProps extends React.Props<CollapseClass> {
  className?:string;
  dimension?:string;
  in?:boolean;
  role?:string;
  timeout?:number;
  transitionAppear?:boolean;
  unmountonExit?:boolean;
  getDimensionValue?:Function;
  onEnter?:Function;
  onEntered?:Function;
  onEntering?:Function;
  onExit?:Function;
  onExited?:Function;
  onExiting?:Function;
}
export interface Collapse extends React.ReactElement<CollapseProps> {}
export interface CollapseClass extends React.ComponentClass<CollapseProps> {}
export var Collapse:CollapseClass;
}
declare module 'react-bootstrap/src/Collapse' {
export * from '~react-bootstrap/src/Collapse';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/FormGroup.d.ts
declare module '~react-bootstrap/src/FormGroup' {
// Import React
import React = require('react');

// <FormGroup />
// ----------------------------------------
export interface FormGroupProps extends React.Props<FormGroupClass> {
  controlId: string;
  validationState?: string;
}
export interface FormGroup extends React.ReactElement<FormGroupProps> {}
export interface FormGroupClass extends React.ComponentClass<FormGroupProps> {}
export var FormGroup:FormGroupClass;
}
declare module 'react-bootstrap/src/FormGroup' {
export * from '~react-bootstrap/src/FormGroup';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/InputGroupAddon.d.ts
declare module '~react-bootstrap/src/InputGroupAddon' {
// Import React
import React = require('react');

// <InputGroup />
export interface InputGroupAddonProps extends React.Props<InputGroupAddonClass> {

}
export interface InputGroupAddon extends React.ReactElement<InputGroupAddonProps> {}
export interface InputGroupAddonClass extends React.ComponentClass<InputGroupAddonProps> {}
export var InputGroupAddon:InputGroupAddonClass;
}
declare module 'react-bootstrap/src/InputGroupAddon' {
export * from '~react-bootstrap/src/InputGroupAddon';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/InputGroupButton.d.ts
declare module '~react-bootstrap/src/InputGroupButton' {
// Import React
import React = require('react');

// <InputGroup.Button />
export interface InputGroupButtonProps extends React.Props<InputGroupButtonClass> {

}
export interface InputGroupButton extends React.ReactElement<InputGroupButtonProps> {}
export interface InputGroupButtonClass extends React.ComponentClass<InputGroupButtonProps> {}
export var InputGroupButton:InputGroupButtonClass;
}
declare module 'react-bootstrap/src/InputGroupButton' {
export * from '~react-bootstrap/src/InputGroupButton';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/InputGroup.d.ts
declare module '~react-bootstrap/src/InputGroup' {
// Import React
import React = require('react');
import { InputGroupAddonClass } from '~react-bootstrap/src/InputGroupAddon';
import { InputGroupButtonClass } from '~react-bootstrap/src/InputGroupButton';

// <InputGroup />
// ----------------------------------------
export interface InputGroupProps extends React.Props<InputGroupClass> {

}
export interface InputGroup extends React.ReactElement<InputGroupProps> {}
export interface InputGroupClass extends React.ComponentClass<InputGroupProps> {
  Addon: InputGroupAddonClass;
  Button: InputGroupButtonClass;
}
export var InputGroup:InputGroupClass;
}
declare module 'react-bootstrap/src/InputGroup' {
export * from '~react-bootstrap/src/InputGroup';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/FormControlFeedback.d.ts
declare module '~react-bootstrap/src/FormControlFeedback' {
// Import React
import React = require('react');


export interface FormControlFeedbackProps extends React.Props<FormControlFeedbackClass> {
}
export interface FormControlFeedback extends React.ReactElement<FormControlFeedbackProps> {}
export interface FormControlFeedbackClass extends React.ComponentClass<FormControlFeedbackProps> {}
export var FormControlFeedback:FormControlFeedbackClass;
}
declare module 'react-bootstrap/src/FormControlFeedback' {
export * from '~react-bootstrap/src/FormControlFeedback';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/src/FormControl.d.ts
declare module '~react-bootstrap/src/FormControl' {
// Import React
import React = require('react');
import {FormControlFeedbackClass} from '~react-bootstrap/src/FormControlFeedback';

// <FormControl />
// ----------------------------------------
export interface FormControlProps extends React.Props<FormControlClass> {
  type: string;
  id?: string;
  name?: string;
  value?: string | number;
  placeholder?: string;
  onChange?: Function;
  onKeyPress?: Function;
  inputRef?: Function;
}
export interface FormControl extends React.ReactElement<FormControlProps> {}
export interface FormControlClass extends React.ComponentClass<FormControlProps> {
  Feedback: FormControlFeedbackClass;
}
export var FormControl:FormControlClass;
}
declare module 'react-bootstrap/src/FormControl' {
export * from '~react-bootstrap/src/FormControl';
}

// Generated by typings
// Source: https://raw.githubusercontent.com/react-bootstrap/react-bootstrap-typescript/master/index.d.ts
declare module '~react-bootstrap/index' {
// Generated by typings
// Source: https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/46719185c564694c5583c4b7ad94dbb786ecad46/react-bootstrap/react-bootstrap.d.ts
// Type definitions for react-bootstrap
// Project: https://github.com/react-bootstrap/react-bootstrap
// Definitions by: Walker Burgin <https://github.com/walkerburgin>
// Definitions: https://github.com/borisyankov/DefinitelyTyped

export {Button} from '~react-bootstrap/src/Button';
export {ButtonToolbar} from '~react-bootstrap/src/ButtonToolbar';
export {ButtonGroup} from '~react-bootstrap/src/ButtonGroup';
export {DropdownButton} from '~react-bootstrap/src/DropdownButton';
export {SplitButton} from '~react-bootstrap/src/SplitButton';
export {MenuItem} from '~react-bootstrap/src/MenuItem';
export {Panel} from '~react-bootstrap/src/Panel';
export {Accordion} from '~react-bootstrap/src/Accordion';
export {PanelGroup} from '~react-bootstrap/src/PanelGroup';
export {Modal} from '~react-bootstrap/src/Modal';
export {OverlayTrigger} from '~react-bootstrap/src/OverlayTrigger';
export {Tooltip} from '~react-bootstrap/src/Tooltip';
export {Popover} from '~react-bootstrap/src/Popover';
export {Overlay} from '~react-bootstrap/src/Overlay';
export {ProgressBar} from '~react-bootstrap/src/ProgressBar';
export {Nav} from '~react-bootstrap/src/Nav';
export {NavItem} from '~react-bootstrap/src/NavItem';
export {Navbar} from '~react-bootstrap/src/Navbar';
export {NavBrand} from '~react-bootstrap/src/NavBrand';
export {NavDropdown} from '~react-bootstrap/src/NavDropdown';
export {Tabs} from '~react-bootstrap/src/Tabs';
export {Tab} from '~react-bootstrap/src/Tab';
export {Pager} from '~react-bootstrap/src/Pager';
export {PageItem} from '~react-bootstrap/src/PageItem';
export {Pagination} from '~react-bootstrap/src/Pagination';
export {Alert} from '~react-bootstrap/src/Alert';
export {Carousel} from '~react-bootstrap/src/Carousel';
export {CarouselItem} from '~react-bootstrap/src/CarouselItem';
export {Grid} from '~react-bootstrap/src/Grid';
export {Row} from '~react-bootstrap/src/Row';
export {Col} from '~react-bootstrap/src/Col';
export {Thumbnail} from '~react-bootstrap/src/Thumbnail';
export {ListGroup} from '~react-bootstrap/src/ListGroup';
export {ListGroupItem} from '~react-bootstrap/src/ListGroupItem';
export {Label} from '~react-bootstrap/src/Label';
export {Badge} from '~react-bootstrap/src/Badge';
export {Jumbotron} from '~react-bootstrap/src/Jumbotron';
export {PageHeader} from '~react-bootstrap/src/PageHeader';
export {Well} from '~react-bootstrap/src/Well';
export {Glyphicon} from '~react-bootstrap/src/Glyphicon';
export {Table} from '~react-bootstrap/src/Table';
export {Input} from '~react-bootstrap/src/Input';
export {ButtonInput} from '~react-bootstrap/src/ButtonInput';
export {Portal} from '~react-bootstrap/src/Portal';

// TODO: FormControls.Static

export {Position} from '~react-bootstrap/src/Position';
export {Fade} from '~react-bootstrap/src/Fade';
export {Breadcrumb} from '~react-bootstrap/src/Breadcrumb';
export {BreadcrumbItem} from '~react-bootstrap/src/BreadcrumbItem';
export {Image} from '~react-bootstrap/src/Image';
export {Collapse} from '~react-bootstrap/src/Collapse';
export {FormGroup} from '~react-bootstrap/src/FormGroup';
export {InputGroup} from '~react-bootstrap/src/InputGroup';
export {FormControl} from '~react-bootstrap/src/FormControl';
}
declare module 'react-bootstrap/index' {
export * from '~react-bootstrap/index';
}
declare module 'react-bootstrap' {
export * from '~react-bootstrap/index';
}
